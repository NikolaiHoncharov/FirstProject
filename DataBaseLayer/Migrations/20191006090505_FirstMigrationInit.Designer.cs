// <auto-generated />
using DataBaseLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataBaseLayer.Migrations
{
    [DbContext(typeof(EFDBContext))]
    [Migration("20191006090505_FirstMigrationInit")]
    partial class FirstMigrationInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataBaseLayer.Entityes.Directory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Html");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Directories");
                });

            modelBuilder.Entity("DataBaseLayer.Entityes.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DirectoryId");

                    b.Property<string>("Html");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("DirectoryId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("DataBaseLayer.Entityes.Material", b =>
                {
                    b.HasOne("DataBaseLayer.Entityes.Directory", "Directory")
                        .WithMany("Materials")
                        .HasForeignKey("DirectoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
